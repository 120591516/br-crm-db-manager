<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="br.crm.mapper.patient.registerSheet.PatientRegisterSheetMapper" >
  <resultMap id="BaseResultMap" type="br.crm.pojo.patient.registerSheet.PatientRegisterSheet" >
    <id column="reg_id" property="regId" jdbcType="VARCHAR" />
    <result column="reg_no" property="regNo" jdbcType="VARCHAR" />
    <result column="reg_chain_id" property="regChainId" jdbcType="VARCHAR" />
    <result column="patient_card_no" property="patientCardNo" jdbcType="VARCHAR" />
    <result column="patient_card_no_type" property="patientCardNoType" jdbcType="VARCHAR" />
    <result column="patient_archive_no" property="patientArchiveNo" jdbcType="VARCHAR" />
    <result column="patient_no" property="patientNo" jdbcType="VARCHAR" />
    <result column="patient_id" property="patientId" jdbcType="VARCHAR" />
    <result column="patient_name" property="patientName" jdbcType="VARCHAR" />
    <result column="reg_is_return" property="regIsReturn" jdbcType="BIT" />
    <result column="reg_is_whole_return" property="regIsWholeReturn" jdbcType="BIT" />
    <result column="reg_whole_return_id" property="regWholeReturnId" jdbcType="VARCHAR" />
    <result column="pay_way_id" property="payWayId" jdbcType="VARCHAR" />
    <result column="reg_transfered" property="regTransfered" jdbcType="BIT" />
    <result column="reg_confirmed" property="regConfirmed" jdbcType="BIT" />
    <result column="reg_fee_charged" property="regFeeCharged" jdbcType="BIT" />
    <result column="reg_money_amount" property="regMoneyAmount" jdbcType="DECIMAL" />
    <result column="reg_exec_depart_code" property="regExecDepartCode" jdbcType="VARCHAR" />
    <result column="reg_open_doctor_code" property="regOpenDoctorCode" jdbcType="VARCHAR" />
    <result column="reg_open_doctor_name" property="regOpenDoctorName" jdbcType="VARCHAR" />
    <result column="reg_oper_register_id" property="regOperRegisterId" jdbcType="VARCHAR" />
    <result column="reg_oper_register_time" property="regOperRegisterTime" jdbcType="TIMESTAMP" />
    <result column="reg_charger_id" property="regChargerId" jdbcType="VARCHAR" />
    <result column="reg_charger_time" property="regChargerTime" jdbcType="TIMESTAMP" />
    <result column="reg_work_inner_modify" property="regWorkInnerModify" jdbcType="BIT" />
    <result column="reg_create_time" property="regCreateTime" jdbcType="DECIMAL" />
    <result column="reg_edit_time" property="regEditTime" jdbcType="DECIMAL" />
    <result column="reg_status" property="regStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    reg_id, reg_no, reg_chain_id, patient_card_no, patient_card_no_type, patient_archive_no, 
    patient_no, patient_id, patient_name, reg_is_return, reg_is_whole_return, reg_whole_return_id, 
    pay_way_id, reg_transfered, reg_confirmed, reg_fee_charged, reg_money_amount, reg_exec_depart_code, 
    reg_open_doctor_code, reg_open_doctor_name, reg_oper_register_id, reg_oper_register_time, 
    reg_charger_id, reg_charger_time, reg_work_inner_modify, reg_create_time, reg_edit_time, 
    reg_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="br.crm.pojo.patient.registerSheet.PatientRegisterSheetExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from patient_register_sheet
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from patient_register_sheet
    where reg_id = #{regId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from patient_register_sheet
    where reg_id = #{regId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="br.crm.pojo.patient.registerSheet.PatientRegisterSheetExample" >
    delete from patient_register_sheet
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="br.crm.pojo.patient.registerSheet.PatientRegisterSheet" >
    insert into patient_register_sheet (reg_id, reg_no, reg_chain_id, 
      patient_card_no, patient_card_no_type, patient_archive_no, 
      patient_no, patient_id, patient_name, 
      reg_is_return, reg_is_whole_return, reg_whole_return_id, 
      pay_way_id, reg_transfered, reg_confirmed, 
      reg_fee_charged, reg_money_amount, reg_exec_depart_code, 
      reg_open_doctor_code, reg_open_doctor_name, reg_oper_register_id, 
      reg_oper_register_time, reg_charger_id, reg_charger_time, 
      reg_work_inner_modify, reg_create_time, reg_edit_time, 
      reg_status)
    values (#{regId,jdbcType=VARCHAR}, #{regNo,jdbcType=VARCHAR}, #{regChainId,jdbcType=VARCHAR}, 
      #{patientCardNo,jdbcType=VARCHAR}, #{patientCardNoType,jdbcType=VARCHAR}, #{patientArchiveNo,jdbcType=VARCHAR}, 
      #{patientNo,jdbcType=VARCHAR}, #{patientId,jdbcType=VARCHAR}, #{patientName,jdbcType=VARCHAR}, 
      #{regIsReturn,jdbcType=BIT}, #{regIsWholeReturn,jdbcType=BIT}, #{regWholeReturnId,jdbcType=VARCHAR}, 
      #{payWayId,jdbcType=VARCHAR}, #{regTransfered,jdbcType=BIT}, #{regConfirmed,jdbcType=BIT}, 
      #{regFeeCharged,jdbcType=BIT}, #{regMoneyAmount,jdbcType=DECIMAL}, #{regExecDepartCode,jdbcType=VARCHAR}, 
      #{regOpenDoctorCode,jdbcType=VARCHAR}, #{regOpenDoctorName,jdbcType=VARCHAR}, #{regOperRegisterId,jdbcType=VARCHAR}, 
      #{regOperRegisterTime,jdbcType=TIMESTAMP}, #{regChargerId,jdbcType=VARCHAR}, #{regChargerTime,jdbcType=TIMESTAMP}, 
      #{regWorkInnerModify,jdbcType=BIT}, #{regCreateTime,jdbcType=DECIMAL}, #{regEditTime,jdbcType=DECIMAL}, 
      #{regStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="br.crm.pojo.patient.registerSheet.PatientRegisterSheet" >
    insert into patient_register_sheet
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="regId != null" >
        reg_id,
      </if>
      <if test="regNo != null" >
        reg_no,
      </if>
      <if test="regChainId != null" >
        reg_chain_id,
      </if>
      <if test="patientCardNo != null" >
        patient_card_no,
      </if>
      <if test="patientCardNoType != null" >
        patient_card_no_type,
      </if>
      <if test="patientArchiveNo != null" >
        patient_archive_no,
      </if>
      <if test="patientNo != null" >
        patient_no,
      </if>
      <if test="patientId != null" >
        patient_id,
      </if>
      <if test="patientName != null" >
        patient_name,
      </if>
      <if test="regIsReturn != null" >
        reg_is_return,
      </if>
      <if test="regIsWholeReturn != null" >
        reg_is_whole_return,
      </if>
      <if test="regWholeReturnId != null" >
        reg_whole_return_id,
      </if>
      <if test="payWayId != null" >
        pay_way_id,
      </if>
      <if test="regTransfered != null" >
        reg_transfered,
      </if>
      <if test="regConfirmed != null" >
        reg_confirmed,
      </if>
      <if test="regFeeCharged != null" >
        reg_fee_charged,
      </if>
      <if test="regMoneyAmount != null" >
        reg_money_amount,
      </if>
      <if test="regExecDepartCode != null" >
        reg_exec_depart_code,
      </if>
      <if test="regOpenDoctorCode != null" >
        reg_open_doctor_code,
      </if>
      <if test="regOpenDoctorName != null" >
        reg_open_doctor_name,
      </if>
      <if test="regOperRegisterId != null" >
        reg_oper_register_id,
      </if>
      <if test="regOperRegisterTime != null" >
        reg_oper_register_time,
      </if>
      <if test="regChargerId != null" >
        reg_charger_id,
      </if>
      <if test="regChargerTime != null" >
        reg_charger_time,
      </if>
      <if test="regWorkInnerModify != null" >
        reg_work_inner_modify,
      </if>
      <if test="regCreateTime != null" >
        reg_create_time,
      </if>
      <if test="regEditTime != null" >
        reg_edit_time,
      </if>
      <if test="regStatus != null" >
        reg_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="regId != null" >
        #{regId,jdbcType=VARCHAR},
      </if>
      <if test="regNo != null" >
        #{regNo,jdbcType=VARCHAR},
      </if>
      <if test="regChainId != null" >
        #{regChainId,jdbcType=VARCHAR},
      </if>
      <if test="patientCardNo != null" >
        #{patientCardNo,jdbcType=VARCHAR},
      </if>
      <if test="patientCardNoType != null" >
        #{patientCardNoType,jdbcType=VARCHAR},
      </if>
      <if test="patientArchiveNo != null" >
        #{patientArchiveNo,jdbcType=VARCHAR},
      </if>
      <if test="patientNo != null" >
        #{patientNo,jdbcType=VARCHAR},
      </if>
      <if test="patientId != null" >
        #{patientId,jdbcType=VARCHAR},
      </if>
      <if test="patientName != null" >
        #{patientName,jdbcType=VARCHAR},
      </if>
      <if test="regIsReturn != null" >
        #{regIsReturn,jdbcType=BIT},
      </if>
      <if test="regIsWholeReturn != null" >
        #{regIsWholeReturn,jdbcType=BIT},
      </if>
      <if test="regWholeReturnId != null" >
        #{regWholeReturnId,jdbcType=VARCHAR},
      </if>
      <if test="payWayId != null" >
        #{payWayId,jdbcType=VARCHAR},
      </if>
      <if test="regTransfered != null" >
        #{regTransfered,jdbcType=BIT},
      </if>
      <if test="regConfirmed != null" >
        #{regConfirmed,jdbcType=BIT},
      </if>
      <if test="regFeeCharged != null" >
        #{regFeeCharged,jdbcType=BIT},
      </if>
      <if test="regMoneyAmount != null" >
        #{regMoneyAmount,jdbcType=DECIMAL},
      </if>
      <if test="regExecDepartCode != null" >
        #{regExecDepartCode,jdbcType=VARCHAR},
      </if>
      <if test="regOpenDoctorCode != null" >
        #{regOpenDoctorCode,jdbcType=VARCHAR},
      </if>
      <if test="regOpenDoctorName != null" >
        #{regOpenDoctorName,jdbcType=VARCHAR},
      </if>
      <if test="regOperRegisterId != null" >
        #{regOperRegisterId,jdbcType=VARCHAR},
      </if>
      <if test="regOperRegisterTime != null" >
        #{regOperRegisterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="regChargerId != null" >
        #{regChargerId,jdbcType=VARCHAR},
      </if>
      <if test="regChargerTime != null" >
        #{regChargerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="regWorkInnerModify != null" >
        #{regWorkInnerModify,jdbcType=BIT},
      </if>
      <if test="regCreateTime != null" >
        #{regCreateTime,jdbcType=DECIMAL},
      </if>
      <if test="regEditTime != null" >
        #{regEditTime,jdbcType=DECIMAL},
      </if>
      <if test="regStatus != null" >
        #{regStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="br.crm.pojo.patient.registerSheet.PatientRegisterSheetExample" resultType="java.lang.Integer" >
    select count(*) from patient_register_sheet
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update patient_register_sheet
    <set >
      <if test="record.regId != null" >
        reg_id = #{record.regId,jdbcType=VARCHAR},
      </if>
      <if test="record.regNo != null" >
        reg_no = #{record.regNo,jdbcType=VARCHAR},
      </if>
      <if test="record.regChainId != null" >
        reg_chain_id = #{record.regChainId,jdbcType=VARCHAR},
      </if>
      <if test="record.patientCardNo != null" >
        patient_card_no = #{record.patientCardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.patientCardNoType != null" >
        patient_card_no_type = #{record.patientCardNoType,jdbcType=VARCHAR},
      </if>
      <if test="record.patientArchiveNo != null" >
        patient_archive_no = #{record.patientArchiveNo,jdbcType=VARCHAR},
      </if>
      <if test="record.patientNo != null" >
        patient_no = #{record.patientNo,jdbcType=VARCHAR},
      </if>
      <if test="record.patientId != null" >
        patient_id = #{record.patientId,jdbcType=VARCHAR},
      </if>
      <if test="record.patientName != null" >
        patient_name = #{record.patientName,jdbcType=VARCHAR},
      </if>
      <if test="record.regIsReturn != null" >
        reg_is_return = #{record.regIsReturn,jdbcType=BIT},
      </if>
      <if test="record.regIsWholeReturn != null" >
        reg_is_whole_return = #{record.regIsWholeReturn,jdbcType=BIT},
      </if>
      <if test="record.regWholeReturnId != null" >
        reg_whole_return_id = #{record.regWholeReturnId,jdbcType=VARCHAR},
      </if>
      <if test="record.payWayId != null" >
        pay_way_id = #{record.payWayId,jdbcType=VARCHAR},
      </if>
      <if test="record.regTransfered != null" >
        reg_transfered = #{record.regTransfered,jdbcType=BIT},
      </if>
      <if test="record.regConfirmed != null" >
        reg_confirmed = #{record.regConfirmed,jdbcType=BIT},
      </if>
      <if test="record.regFeeCharged != null" >
        reg_fee_charged = #{record.regFeeCharged,jdbcType=BIT},
      </if>
      <if test="record.regMoneyAmount != null" >
        reg_money_amount = #{record.regMoneyAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.regExecDepartCode != null" >
        reg_exec_depart_code = #{record.regExecDepartCode,jdbcType=VARCHAR},
      </if>
      <if test="record.regOpenDoctorCode != null" >
        reg_open_doctor_code = #{record.regOpenDoctorCode,jdbcType=VARCHAR},
      </if>
      <if test="record.regOpenDoctorName != null" >
        reg_open_doctor_name = #{record.regOpenDoctorName,jdbcType=VARCHAR},
      </if>
      <if test="record.regOperRegisterId != null" >
        reg_oper_register_id = #{record.regOperRegisterId,jdbcType=VARCHAR},
      </if>
      <if test="record.regOperRegisterTime != null" >
        reg_oper_register_time = #{record.regOperRegisterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.regChargerId != null" >
        reg_charger_id = #{record.regChargerId,jdbcType=VARCHAR},
      </if>
      <if test="record.regChargerTime != null" >
        reg_charger_time = #{record.regChargerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.regWorkInnerModify != null" >
        reg_work_inner_modify = #{record.regWorkInnerModify,jdbcType=BIT},
      </if>
      <if test="record.regCreateTime != null" >
        reg_create_time = #{record.regCreateTime,jdbcType=DECIMAL},
      </if>
      <if test="record.regEditTime != null" >
        reg_edit_time = #{record.regEditTime,jdbcType=DECIMAL},
      </if>
      <if test="record.regStatus != null" >
        reg_status = #{record.regStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update patient_register_sheet
    set reg_id = #{record.regId,jdbcType=VARCHAR},
      reg_no = #{record.regNo,jdbcType=VARCHAR},
      reg_chain_id = #{record.regChainId,jdbcType=VARCHAR},
      patient_card_no = #{record.patientCardNo,jdbcType=VARCHAR},
      patient_card_no_type = #{record.patientCardNoType,jdbcType=VARCHAR},
      patient_archive_no = #{record.patientArchiveNo,jdbcType=VARCHAR},
      patient_no = #{record.patientNo,jdbcType=VARCHAR},
      patient_id = #{record.patientId,jdbcType=VARCHAR},
      patient_name = #{record.patientName,jdbcType=VARCHAR},
      reg_is_return = #{record.regIsReturn,jdbcType=BIT},
      reg_is_whole_return = #{record.regIsWholeReturn,jdbcType=BIT},
      reg_whole_return_id = #{record.regWholeReturnId,jdbcType=VARCHAR},
      pay_way_id = #{record.payWayId,jdbcType=VARCHAR},
      reg_transfered = #{record.regTransfered,jdbcType=BIT},
      reg_confirmed = #{record.regConfirmed,jdbcType=BIT},
      reg_fee_charged = #{record.regFeeCharged,jdbcType=BIT},
      reg_money_amount = #{record.regMoneyAmount,jdbcType=DECIMAL},
      reg_exec_depart_code = #{record.regExecDepartCode,jdbcType=VARCHAR},
      reg_open_doctor_code = #{record.regOpenDoctorCode,jdbcType=VARCHAR},
      reg_open_doctor_name = #{record.regOpenDoctorName,jdbcType=VARCHAR},
      reg_oper_register_id = #{record.regOperRegisterId,jdbcType=VARCHAR},
      reg_oper_register_time = #{record.regOperRegisterTime,jdbcType=TIMESTAMP},
      reg_charger_id = #{record.regChargerId,jdbcType=VARCHAR},
      reg_charger_time = #{record.regChargerTime,jdbcType=TIMESTAMP},
      reg_work_inner_modify = #{record.regWorkInnerModify,jdbcType=BIT},
      reg_create_time = #{record.regCreateTime,jdbcType=DECIMAL},
      reg_edit_time = #{record.regEditTime,jdbcType=DECIMAL},
      reg_status = #{record.regStatus,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="br.crm.pojo.patient.registerSheet.PatientRegisterSheet" >
    update patient_register_sheet
    <set >
      <if test="regNo != null" >
        reg_no = #{regNo,jdbcType=VARCHAR},
      </if>
      <if test="regChainId != null" >
        reg_chain_id = #{regChainId,jdbcType=VARCHAR},
      </if>
      <if test="patientCardNo != null" >
        patient_card_no = #{patientCardNo,jdbcType=VARCHAR},
      </if>
      <if test="patientCardNoType != null" >
        patient_card_no_type = #{patientCardNoType,jdbcType=VARCHAR},
      </if>
      <if test="patientArchiveNo != null" >
        patient_archive_no = #{patientArchiveNo,jdbcType=VARCHAR},
      </if>
      <if test="patientNo != null" >
        patient_no = #{patientNo,jdbcType=VARCHAR},
      </if>
      <if test="patientId != null" >
        patient_id = #{patientId,jdbcType=VARCHAR},
      </if>
      <if test="patientName != null" >
        patient_name = #{patientName,jdbcType=VARCHAR},
      </if>
      <if test="regIsReturn != null" >
        reg_is_return = #{regIsReturn,jdbcType=BIT},
      </if>
      <if test="regIsWholeReturn != null" >
        reg_is_whole_return = #{regIsWholeReturn,jdbcType=BIT},
      </if>
      <if test="regWholeReturnId != null" >
        reg_whole_return_id = #{regWholeReturnId,jdbcType=VARCHAR},
      </if>
      <if test="payWayId != null" >
        pay_way_id = #{payWayId,jdbcType=VARCHAR},
      </if>
      <if test="regTransfered != null" >
        reg_transfered = #{regTransfered,jdbcType=BIT},
      </if>
      <if test="regConfirmed != null" >
        reg_confirmed = #{regConfirmed,jdbcType=BIT},
      </if>
      <if test="regFeeCharged != null" >
        reg_fee_charged = #{regFeeCharged,jdbcType=BIT},
      </if>
      <if test="regMoneyAmount != null" >
        reg_money_amount = #{regMoneyAmount,jdbcType=DECIMAL},
      </if>
      <if test="regExecDepartCode != null" >
        reg_exec_depart_code = #{regExecDepartCode,jdbcType=VARCHAR},
      </if>
      <if test="regOpenDoctorCode != null" >
        reg_open_doctor_code = #{regOpenDoctorCode,jdbcType=VARCHAR},
      </if>
      <if test="regOpenDoctorName != null" >
        reg_open_doctor_name = #{regOpenDoctorName,jdbcType=VARCHAR},
      </if>
      <if test="regOperRegisterId != null" >
        reg_oper_register_id = #{regOperRegisterId,jdbcType=VARCHAR},
      </if>
      <if test="regOperRegisterTime != null" >
        reg_oper_register_time = #{regOperRegisterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="regChargerId != null" >
        reg_charger_id = #{regChargerId,jdbcType=VARCHAR},
      </if>
      <if test="regChargerTime != null" >
        reg_charger_time = #{regChargerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="regWorkInnerModify != null" >
        reg_work_inner_modify = #{regWorkInnerModify,jdbcType=BIT},
      </if>
      <if test="regCreateTime != null" >
        reg_create_time = #{regCreateTime,jdbcType=DECIMAL},
      </if>
      <if test="regEditTime != null" >
        reg_edit_time = #{regEditTime,jdbcType=DECIMAL},
      </if>
      <if test="regStatus != null" >
        reg_status = #{regStatus,jdbcType=INTEGER},
      </if>
    </set>
    where reg_id = #{regId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="br.crm.pojo.patient.registerSheet.PatientRegisterSheet" >
    update patient_register_sheet
    set reg_no = #{regNo,jdbcType=VARCHAR},
      reg_chain_id = #{regChainId,jdbcType=VARCHAR},
      patient_card_no = #{patientCardNo,jdbcType=VARCHAR},
      patient_card_no_type = #{patientCardNoType,jdbcType=VARCHAR},
      patient_archive_no = #{patientArchiveNo,jdbcType=VARCHAR},
      patient_no = #{patientNo,jdbcType=VARCHAR},
      patient_id = #{patientId,jdbcType=VARCHAR},
      patient_name = #{patientName,jdbcType=VARCHAR},
      reg_is_return = #{regIsReturn,jdbcType=BIT},
      reg_is_whole_return = #{regIsWholeReturn,jdbcType=BIT},
      reg_whole_return_id = #{regWholeReturnId,jdbcType=VARCHAR},
      pay_way_id = #{payWayId,jdbcType=VARCHAR},
      reg_transfered = #{regTransfered,jdbcType=BIT},
      reg_confirmed = #{regConfirmed,jdbcType=BIT},
      reg_fee_charged = #{regFeeCharged,jdbcType=BIT},
      reg_money_amount = #{regMoneyAmount,jdbcType=DECIMAL},
      reg_exec_depart_code = #{regExecDepartCode,jdbcType=VARCHAR},
      reg_open_doctor_code = #{regOpenDoctorCode,jdbcType=VARCHAR},
      reg_open_doctor_name = #{regOpenDoctorName,jdbcType=VARCHAR},
      reg_oper_register_id = #{regOperRegisterId,jdbcType=VARCHAR},
      reg_oper_register_time = #{regOperRegisterTime,jdbcType=TIMESTAMP},
      reg_charger_id = #{regChargerId,jdbcType=VARCHAR},
      reg_charger_time = #{regChargerTime,jdbcType=TIMESTAMP},
      reg_work_inner_modify = #{regWorkInnerModify,jdbcType=BIT},
      reg_create_time = #{regCreateTime,jdbcType=DECIMAL},
      reg_edit_time = #{regEditTime,jdbcType=DECIMAL},
      reg_status = #{regStatus,jdbcType=INTEGER}
    where reg_id = #{regId,jdbcType=VARCHAR}
  </update>
</mapper>