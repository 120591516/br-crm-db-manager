<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="br.crm.mapper.permission.branch.OrganizationBranchRolePermissionMapper" >
  <resultMap id="BaseResultMap" type="br.crm.pojo.permission.branch.OrganizationBranchRolePermission" >
    <id column="role_permission_id" property="rolePermissionId" jdbcType="BIGINT" />
    <result column="branch_role_id" property="branchRoleId" jdbcType="BIGINT" />
    <result column="branch_permission_id" property="branchPermissionId" jdbcType="BIGINT" />
    <result column="role_permission_status" property="rolePermissionStatus" jdbcType="INTEGER" />
    <result column="role_permission_create_time" property="rolePermissionCreateTime" jdbcType="TIMESTAMP" />
    <result column="role_permission_edit_time" property="rolePermissionEditTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    role_permission_id, branch_role_id, branch_permission_id, role_permission_status, 
    role_permission_create_time, role_permission_edit_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="br.crm.pojo.permission.branch.OrganizationBranchRolePermissionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from organization_branch_role_permission
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from organization_branch_role_permission
    where role_permission_id = #{rolePermissionId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from organization_branch_role_permission
    where role_permission_id = #{rolePermissionId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="br.crm.pojo.permission.branch.OrganizationBranchRolePermissionExample" >
    delete from organization_branch_role_permission
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="br.crm.pojo.permission.branch.OrganizationBranchRolePermission" >
    insert into organization_branch_role_permission (role_permission_id, branch_role_id, branch_permission_id, 
      role_permission_status, role_permission_create_time, 
      role_permission_edit_time)
    values (#{rolePermissionId,jdbcType=BIGINT}, #{branchRoleId,jdbcType=BIGINT}, #{branchPermissionId,jdbcType=BIGINT}, 
      #{rolePermissionStatus,jdbcType=INTEGER}, #{rolePermissionCreateTime,jdbcType=TIMESTAMP}, 
      #{rolePermissionEditTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="br.crm.pojo.permission.branch.OrganizationBranchRolePermission" >
    insert into organization_branch_role_permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rolePermissionId != null" >
        role_permission_id,
      </if>
      <if test="branchRoleId != null" >
        branch_role_id,
      </if>
      <if test="branchPermissionId != null" >
        branch_permission_id,
      </if>
      <if test="rolePermissionStatus != null" >
        role_permission_status,
      </if>
      <if test="rolePermissionCreateTime != null" >
        role_permission_create_time,
      </if>
      <if test="rolePermissionEditTime != null" >
        role_permission_edit_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rolePermissionId != null" >
        #{rolePermissionId,jdbcType=BIGINT},
      </if>
      <if test="branchRoleId != null" >
        #{branchRoleId,jdbcType=BIGINT},
      </if>
      <if test="branchPermissionId != null" >
        #{branchPermissionId,jdbcType=BIGINT},
      </if>
      <if test="rolePermissionStatus != null" >
        #{rolePermissionStatus,jdbcType=INTEGER},
      </if>
      <if test="rolePermissionCreateTime != null" >
        #{rolePermissionCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rolePermissionEditTime != null" >
        #{rolePermissionEditTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="br.crm.pojo.permission.branch.OrganizationBranchRolePermissionExample" resultType="java.lang.Integer" >
    select count(*) from organization_branch_role_permission
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update organization_branch_role_permission
    <set >
      <if test="record.rolePermissionId != null" >
        role_permission_id = #{record.rolePermissionId,jdbcType=BIGINT},
      </if>
      <if test="record.branchRoleId != null" >
        branch_role_id = #{record.branchRoleId,jdbcType=BIGINT},
      </if>
      <if test="record.branchPermissionId != null" >
        branch_permission_id = #{record.branchPermissionId,jdbcType=BIGINT},
      </if>
      <if test="record.rolePermissionStatus != null" >
        role_permission_status = #{record.rolePermissionStatus,jdbcType=INTEGER},
      </if>
      <if test="record.rolePermissionCreateTime != null" >
        role_permission_create_time = #{record.rolePermissionCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rolePermissionEditTime != null" >
        role_permission_edit_time = #{record.rolePermissionEditTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update organization_branch_role_permission
    set role_permission_id = #{record.rolePermissionId,jdbcType=BIGINT},
      branch_role_id = #{record.branchRoleId,jdbcType=BIGINT},
      branch_permission_id = #{record.branchPermissionId,jdbcType=BIGINT},
      role_permission_status = #{record.rolePermissionStatus,jdbcType=INTEGER},
      role_permission_create_time = #{record.rolePermissionCreateTime,jdbcType=TIMESTAMP},
      role_permission_edit_time = #{record.rolePermissionEditTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="br.crm.pojo.permission.branch.OrganizationBranchRolePermission" >
    update organization_branch_role_permission
    <set >
      <if test="branchRoleId != null" >
        branch_role_id = #{branchRoleId,jdbcType=BIGINT},
      </if>
      <if test="branchPermissionId != null" >
        branch_permission_id = #{branchPermissionId,jdbcType=BIGINT},
      </if>
      <if test="rolePermissionStatus != null" >
        role_permission_status = #{rolePermissionStatus,jdbcType=INTEGER},
      </if>
      <if test="rolePermissionCreateTime != null" >
        role_permission_create_time = #{rolePermissionCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rolePermissionEditTime != null" >
        role_permission_edit_time = #{rolePermissionEditTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where role_permission_id = #{rolePermissionId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="br.crm.pojo.permission.branch.OrganizationBranchRolePermission" >
    update organization_branch_role_permission
    set branch_role_id = #{branchRoleId,jdbcType=BIGINT},
      branch_permission_id = #{branchPermissionId,jdbcType=BIGINT},
      role_permission_status = #{rolePermissionStatus,jdbcType=INTEGER},
      role_permission_create_time = #{rolePermissionCreateTime,jdbcType=TIMESTAMP},
      role_permission_edit_time = #{rolePermissionEditTime,jdbcType=TIMESTAMP}
    where role_permission_id = #{rolePermissionId,jdbcType=BIGINT}
  </update>
</mapper>